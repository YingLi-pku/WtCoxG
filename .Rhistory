if(i%%1000==0)cat("Complete ",i,"/",ncol(G),"\n")
g = G[,i]
R = PhenoData$R
w = PhenoData$weight
mu.ext = mergeGenoInfo$AF_ref[i]
n.ext = mergeGenoInfo$AN_ref[i]/2
TPR = mergeGenoInfo$TPR[i]
sigma2 = mergeGenoInfo$sigma2[i]
p_bat = mergeGenoInfo$pvalue_bat[i]
w.ext = mergeGenoInfo$w.ext[i]
var.ratio.w0 = mergeGenoInfo$var.ratio.w0[i]
var.ratio.int = mergeGenoInfo$var.ratio.int[i]
var.ratio0 = mergeGenoInfo$var.ratio.ext[i]
WtCoxG.ext = WtCoxG.test(g = g,
R = R,
w = w,
TPR=TPR,
sigma2 = sigma2,
b = w.ext,
var.ratio.w0 =var.ratio.w0,
var.ratio.w1 = var.ratio.w0,
var.ratio0 = var.ratio0,
var.ratio1 = var.ratio0,
mu.ext = mu.ext,
n.ext = n.ext,
p_bat = p_bat,
p_cut = cutoff)
WtCoxG.noext = WtCoxG.test(g = g,
R = R,
w = w,
var.ratio.int = var.ratio.int,
p_bat = p_bat,
p_cut = cutoff)
return( cbind(WtCoxG.ext, WtCoxG.noext) )
}) %>%
do.call("rbind",.) %>%
cbind(.,mergeGenoInfo)
t2=Sys.time()
print(t2-t1)
fwrite(GWAS, file = OutputFile)
return(GWAS)
}
GWAS = WtCoxG(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
obj.WtCoxG = obj.WtCoxG,
OutputFile = "simuBGEN1.txt",
control = list(AlleleOrder = "ref-first", AllMarkers=T))
WtCoxG = function(GenoFile
, GenoFileIndex = NULL           # additional index file(s) corresponding to GenoFile
, Geno.mtx = NULL                # also support genotype matrix
, obj.WtCoxG = NULL              # output list of QCforBatchEffect
, PhenoFile = NULL
, mergeGenoInfoFile = NULL
, RefPrevalence = NULL
, control = NULL
, OutputFile               # output file path
, cutoff=0.1){
library(data.table)
if(!is.null(obj.WtCoxG)){
PhenoData = obj.WtCoxG$PhenoData
mergeGenoInfo = obj.WtCoxG$mergeGenoInfo
RefPrevalence = obj.WtCoxG$RefPrevalence
}else{
PhenoData = fread(PhenoFile)
mergeGenoInfo = fread(mergeGenoInfoFile)
RefPrevalence = RefPrevalence
}
if(is.null(Geno.mtx)){
G = GRAB.ReadGeno(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = PhenoData$SampleID
,control = control)$GenoMat
}else{G = Geno.mtx}
## GWAS analysis ----------------------------------------------------------------------
cat("Start GWAS analysis ########################################################## \n")
t1=Sys.time()
GWAS = lapply(1:ncol(G),function(i){
if(i%%1000==0)cat("Complete ",i,"/",ncol(G),"\n")
g = G[,i]
R = PhenoData$R
w = PhenoData$weight
mu.ext = mergeGenoInfo$AF_ref[i]
n.ext = mergeGenoInfo$AN_ref[i]/2
TPR = mergeGenoInfo$TPR[i]
sigma2 = mergeGenoInfo$sigma2[i]
p_bat = mergeGenoInfo$pvalue_bat[i]
w.ext = mergeGenoInfo$w.ext[i]
var.ratio.w0 = mergeGenoInfo$var.ratio.w0[i]
var.ratio.int = mergeGenoInfo$var.ratio.int[i]
var.ratio0 = mergeGenoInfo$var.ratio.ext[i]
WtCoxG.ext = WtCoxG.test(g = g,
R = R,
w = w,
TPR=TPR,
sigma2 = sigma2,
b = w.ext,
var.ratio.w0 =var.ratio.w0,
var.ratio.w1 = var.ratio.w0,
var.ratio0 = var.ratio0,
var.ratio1 = var.ratio0,
mu.ext = mu.ext,
n.ext = n.ext,
p_bat = p_bat,
p_cut = cutoff)
WtCoxG.noext = WtCoxG.test(g = g,
R = R,
w = w,
var.ratio.int = var.ratio.int,
p_bat = p_bat,
p_cut = cutoff)
return( cbind(WtCoxG.ext, WtCoxG.noext) )
}) %>%
do.call("rbind",.) %>%
cbind(.,mergeGenoInfo)
t2=Sys.time()
print(t2-t1)
fwrite(GWAS, file = OutputFile)
return(GWAS)
}
GWAS = WtCoxG(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
#obj.WtCoxG = obj.WtCoxG,
PhenoFile = "simuPHENO_WtSPAG.txt",
mergeGenoInfoFile = "qcBGEN1.txt"
RefPrevalence = 0.1
GWAS = WtCoxG(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
#obj.WtCoxG = obj.WtCoxG,
PhenoFile = "simuPHENO_WtSPAG.txt",
mergeGenoInfoFile = "qcBGEN1.txt",
RefPrevalence = 0.1
OutputFile = "simuBGEN1.txt",
GWAS = WtCoxG(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
#obj.WtCoxG = obj.WtCoxG,
PhenoFile = "simuPHENO_WtSPAG.txt",
mergeGenoInfoFile = "qcBGEN1.txt",
RefPrevalence = 0.1,
OutputFile = "simuBGEN1.txt",
control = list(AlleleOrder = "ref-first", AllMarkers=T))
data = fread("qcBGEN1.txt")
head(data )
tail(data )
GWAS = WtCoxG(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
obj.WtCoxG = obj.WtCoxG,
# PhenoFile = "simuPHENO_WtSPAG.txt",
# mergeGenoInfoFile = "qcBGEN1.txt",
# RefPrevalence = 0.1,
OutputFile = "simuBGEN1.txt",
control = list(AlleleOrder = "ref-first", AllMarkers=T))
GWAS = WtCoxG(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
#obj.WtCoxG = obj.WtCoxG,
PhenoFile = "simuPHENO_WtSPAG.txt",
mergeGenoInfoFile = "qcBGEN1.txt",
RefPrevalence = 0.1,
OutputFile = "simuBGEN1.txt",
control = list(AlleleOrder = "ref-first", AllMarkers=T))
PhenoFile = "simuPHENO_WtSPAG.txt",
mergeGenoInfoFile = "qcBGEN1.txt",
RefPrevalence = 0.1,
PhenoData = fread(PhenoFile)
PhenoFile = "simuPHENO_WtSPAG.txt"
mergeGenoInfoFile = "qcBGEN1.txt"
RefPrevalence = 0.1
PhenoData = fread(PhenoFile)
mergeGenoInfo = fread(mergeGenoInfoFile)
RefPrevalence = RefPrevalence
G = GRAB.ReadGeno(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = PhenoData$SampleID
,control = control)$GenoMat
control = list(AlleleOrder = "ref-first", AllMarkers=T)
G = GRAB.ReadGeno(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = PhenoData$SampleID
,control = control)$GenoMat
GenoFile = "simuBGEN1.bgen"
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample")
G = GRAB.ReadGeno(GenoFile = GenoFile
,GenoFileIndex = GenoFileIndex
,SampleIDs = PhenoData$SampleID
,control = control)$GenoMat
i=1
g = G[,i]
R = PhenoData$R
w = PhenoData$weight
mu.ext = mergeGenoInfo$AF_ref[i]
n.ext = mergeGenoInfo$AN_ref[i]/2
TPR = mergeGenoInfo$TPR[i]
sigma2 = mergeGenoInfo$sigma2[i]
p_bat = mergeGenoInfo$pvalue_bat[i]
w.ext = mergeGenoInfo$w.ext[i]
var.ratio.w0 = mergeGenoInfo$var.ratio.w0[i]
var.ratio.int = mergeGenoInfo$var.ratio.int[i]
var.ratio0 = mergeGenoInfo$var.ratio.ext[i]
mu.ext
n.ext
g = G[,i]
R = PhenoData$R
w = PhenoData$weight
mu.ext = mergeGenoInfo$AF_ref[i]
n.ext = mergeGenoInfo$AN_ref[i]/2
TPR = mergeGenoInfo$TPR[i]
sigma2 = mergeGenoInfo$sigma2[i]
p_bat = mergeGenoInfo$pvalue_bat[i]
w.ext = mergeGenoInfo$w.ext[i]
var.ratio.w0 = mergeGenoInfo$var.ratio.w0[i]
var.ratio.int = mergeGenoInfo$var.ratio.int[i]
var.ratio0 = mergeGenoInfo$var.ratio.ext[i]
WtCoxG.ext = WtCoxG.test(g = g,
R = R,
w = w,
TPR=TPR,
sigma2 = sigma2,
b = w.ext,
var.ratio.w0 =var.ratio.w0,
var.ratio.w1 = var.ratio.w0,
var.ratio0 = var.ratio0,
var.ratio1 = var.ratio0,
mu.ext = mu.ext,
n.ext = n.ext,
p_bat = p_bat,
p_cut = cutoff)
cutoff
cutoff=0.1
g = G[,i]
R = PhenoData$R
w = PhenoData$weight
mu.ext = mergeGenoInfo$AF_ref[i]
n.ext = mergeGenoInfo$AN_ref[i]/2
TPR = mergeGenoInfo$TPR[i]
sigma2 = mergeGenoInfo$sigma2[i]
p_bat = mergeGenoInfo$pvalue_bat[i]
w.ext = mergeGenoInfo$w.ext[i]
var.ratio.w0 = mergeGenoInfo$var.ratio.w0[i]
var.ratio.int = mergeGenoInfo$var.ratio.int[i]
var.ratio0 = mergeGenoInfo$var.ratio.ext[i]
WtCoxG.ext = WtCoxG.test(g = g,
R = R,
w = w,
TPR=TPR,
sigma2 = sigma2,
b = w.ext,
var.ratio.w0 =var.ratio.w0,
var.ratio.w1 = var.ratio.w0,
var.ratio0 = var.ratio0,
var.ratio1 = var.ratio0,
mu.ext = mu.ext,
n.ext = n.ext,
p_bat = p_bat,
p_cut = cutoff)
head(R)
head(PhenoData )
fwrite(PhenoData, file = "simuPHENO_Resid.txt" ,col.names = T, sep = "\t")
GWAS = WtCoxG(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
#obj.WtCoxG = obj.WtCoxG,
PhenoFile = "simuPHENO_Resid.txt",
mergeGenoInfoFile = "qcBGEN1.txt",
RefPrevalence = 0.1,
OutputFile = "simuBGEN1.txt",
control = list(AlleleOrder = "ref-first", AllMarkers=T))
PhenoFile = "simuPHENO_Resid.txt"
head(PhenoData)
null.WtSPAG = GRAB.NullModel(formula,
data = PhenoData,
subjData = SampleID,
method = "WtSPAG",
traitType = "time-to-event",
control = list(RefPrevalence = RefPrevalence))
null.WtSPAG = GRAB.NullModel(formula,
data = PhenoData,
subjData = SampleID,
method = "WtSPAG",
traitType = "time-to-event",
control = list(RefPrevalence = RefPrevalence))
PhenoData = read.table("simuPHENO_WtSPAG.txt", header = T)
head(PhenoData)
PhenoData = PhenoData%>%rename(SampleID = IID, Indicator = SurvEvent )
head(PhenoData)
null.WtSPAG = GRAB.NullModel(formula,
data = PhenoData,
subjData = SampleID,
method = "WtSPAG",
traitType = "time-to-event",
control = list(RefPrevalence = RefPrevalence))
formula
Surv(SurvTime , Indicator) ~ Cov1 + Cov2
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2
null.WtSPAG = GRAB.NullModel(formula,
data = PhenoData,
subjData = SampleID,
method = "WtSPAG",
traitType = "time-to-event",
control = list(RefPrevalence = RefPrevalence))
PhenoData = PhenoData %>%
mutate(R = null.WtSPAG$mresid,
weight = null.WtSPAG$weight)
head(PhenoData)
fwrite(PhenoData, file = "simuPHENO_Resid.txt" ,col.names = T, sep = "\t")
GWAS = WtCoxG(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
#obj.WtCoxG = obj.WtCoxG,
PhenoFile = "simuPHENO_Resid.txt",
mergeGenoInfoFile = "qcBGEN1.txt",
RefPrevalence = 0.1,
OutputFile = "simuBGEN1.txt",
control = list(AlleleOrder = "ref-first", AllMarkers=T))
gc()
remove.packages("WtCoxG")
library(WtCoxG)
?WtCoxG
roxygen2::roxygenise()
?WtCoxG
?QCforBatchEffect
?WtCoxG
setwd(system.file("", package = "WtCoxG"))
RefPrevalence = 0.1
#step0&1: fit a null model and estimate parameters according to batch effect p values
obj.WtCoxG = QCforBatchEffect(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample"),
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
names(obj.WtCoxG)
#step2: conduct association testing
GWAS = WtCoxG(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
obj.WtCoxG = obj.WtCoxG,
OutputFile = "simuBGEN1.txt",
control = list(AlleleOrder = "ref-first", AllMarkers=T))
# Or users can input PhenoFile, mergeGenoInfoFile and RefPrevalence seperately
GWAS = WtCoxG(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi", "simuBGEN1.sample"),
#obj.WtCoxG = obj.WtCoxG,
PhenoFile = "simuPHENO_Resid.txt",
mergeGenoInfoFile = "qcBGEN1.txt",
RefPrevalence = 0.1,
OutputFile = "simuBGEN1.txt",
control = list(AlleleOrder = "ref-first", AllMarkers=T))
remove.packages(WtCoxG)
PhenoData <- read.table("simuPHENO_WtSPAG.txt", header = TRUE)
head(PhenoData)
library(WtCoxG)
setwd(system.file("", package = "WtCoxG"))
refdata = fread("RefMAFs.txt")
library(data.table)
refdata = fread("RefMAFs.txt")
fwrite(refdata, file ="RefMAFs2.txt" , col.names=T, sep="\t")
fwrite(refdata, file ="D:/Github/WtCoxG/RefMAFs2.txt" , col.names=T, sep="\t")
roxygen2::roxygenise()
setwd("D:/Github/WtCoxG/")
roxygen2::roxygenise()
?WtCoxG
setwd(system.file("", package = "WtCoxG"))
PhenoData = read.table("simuPHENO_WtSPAG.txt", header = T)
RefPrevalence = 0.1
#step0&1: fit a null model and estimate parameters according to batch effect p values
obj.WtCoxG = QCforBatchEffect(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample"),
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs1.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
obj.WtCoxG = QCforBatchEffect(GenoFile = "simuBGEN2.bgen",
GenoFileIndex = c("simuBGEN2.bgen.bgi",
"simuBGEN2.sample"),
OutputFile = "qcBGEN2.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs2.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
setwd(system.file("", package = "WtCoxG"))
PhenoData = read.table("simuPHENO_WtSPAG.txt", header = T)
RefPrevalence = 0.1
obj.WtCoxG = QCforBatchEffect(GenoFile = "simuBGEN2.bgen",
GenoFileIndex = c("simuBGEN2.bgen.bgi",
"simuBGEN2.sample"),
OutputFile = "qcBGEN2.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs2.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
obj.WtCoxG = QCforBatchEffect(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample"),
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs1.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
library(WtCoxG)
setwd(system.file("", package = "WtCoxG"))
PhenoData = read.table("simuPHENO_WtSPAG.txt", header = T)
RefPrevalence = 0.1
#step0&1: fit a null model and estimate parameters according to batch effect p values
obj.WtCoxG = QCforBatchEffect(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample"),
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs1.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
names(obj.WtCoxG)
obj.WtCoxG = QCforBatchEffect(GenoFile = "simuBGEN.bgen",
GenoFileIndex = c("simuBGEN2.bgen.bgi",
"simuBGEN2.sample"),
OutputFile = "qcBGEN2.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs2.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
#step0&1: fit a null model and estimate parameters according to batch effect p values
obj.WtCoxG = QCforBatchEffect(GenoFile = "simuBGEN2.bgen",
GenoFileIndex = c("simuBGEN2.bgen.bgi",
"simuBGEN2.sample"),
OutputFile = "qcBGEN2.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID"),
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs2.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
names(obj.WtCoxG)
head(obj.WtCoxG$mergeGenoInfo)
?QCforBatchEffect
?WtCoxG
??WtCoxG
?rtruncnorm
??rtruncnorm
roxygen2::roxygenise()
?QCforBatchEffect
library(WtCoxG)
?QCforBatchEffect
setwd(system.file("", package = "WtCoxG"))
RefPrevalence = 0.1
obj.WtCoxG = QCforBatchEffect(GenoFile = "simuBGEN1.bgen",
GenoFileIndex = c("simuBGEN1.bgen.bgi",
"simuBGEN1.sample"),
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID", SurvTimeColumn = "SurvTime"), # specify the column names of sampleID, event, and time
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs1.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
names(obj.WtCoxG)
setwd(system.file("", package = "WtCoxG"))
RefPrevalence = 0.1
obj.WtCoxG = QCforBatchEffect(GenoFile = "GenoMat1.bed",
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID", SurvTimeColumn = "SurvTime"), # specify the column names of sampleID, event, and time
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs1.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
setwd(system.file("", package = "WtCoxG"))
RefPrevalence = 0.1
obj.WtCoxG = WtCoxG ::QCforBatchEffect(GenoFile = "GenoMat1.bed",
OutputFile = "qcBGEN1.txt",
control=list(AlleleOrder = "ref-first",
AllMarkers = T,
IndicatorColumn = "SurvEvent", SampleIDColumn = "IID", SurvTimeColumn = "SurvTime"), # specify the column names of sampleID, event, and time
PhenoFile = "simuPHENO_WtSPAG.txt",
RefAfFile = "RefMAFs1.txt",
RefPrevalence = RefPrevalence,
formula = Surv(SurvTime , Indicator) ~ Cov1 + Cov2,
SNPnum=1e4)
names(obj.WtCoxG)
